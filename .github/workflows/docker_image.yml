# GitHub Actions: https://help.github.com/en/articles/workflow-syntax-for-github-actions
# Build and push Docker images Action: https://github.com/marketplace/actions/build-and-push-docker-images

name: Publish Docker image

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  schedule:
    # Run at 02:00 UTC every day
    # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events
    - cron: "0 2 * * FRI"

env:
  DOCKER_REPO: dartsim/dart-dev # https://hub.docker.com/repository/docker/dartsim/dart-dev

jobs:
  # Ubuntu distros (xenial, bionic, focal, groovy, hirsute) on multiple architectures (amd64, arm64, ppc64le, s390x)
  ubuntu-v6_10:
    name: ubuntu-v6.10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: [xenial, bionic, focal, groovy, hirsute]
    env:
      UBUNTU_VERSION: ${{ matrix.distro }}
      DART_VERSION: v6.10
    steps:
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # https://github.com/marketplace/actions/docker-login
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./${{ env.DART_VERSION }}/Dockerfile.ubuntu.${{ env.UBUNTU_VERSION }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          push: true
          tags: ${{ env.DOCKER_REPO }}:ubuntu-${{ env.UBUNTU_VERSION }}-${{ env.DART_VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  # Xenial 32bit on i386
  xenial-32bit-v6_10:
    name: xenial-32bit-v6.10
    runs-on: ubuntu-latest
    env:
      UBUNTU_VERSION: xenial
      DART_VERSION: v6.10
    steps:
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # https://github.com/marketplace/actions/docker-login
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./${{ env.DART_VERSION }}/Dockerfile.ubuntu.xenial.32bit
          push: true
          tags: ${{ env.DOCKER_REPO }}:ubuntu-${{ env.UBUNTU_VERSION }}-32bit-${{ env.DART_VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  # Bionic image for API documentation builds
  bionic-docs:
    name: bionic-docs
    runs-on: ubuntu-latest
    env:
      UBUNTU_VERSION: bionic
      DART_VERSION: docs
    steps:
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # https://github.com/marketplace/actions/docker-login
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./${{ env.DART_VERSION }}/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REPO }}:${{ env.UBUNTU_VERSION }}-${{ env.DART_VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  # Archlinux on amd64
  archlinux-v6_10:
    name: archlinux-v6.10
    runs-on: ubuntu-latest
    env:
      DART_VERSION: v6.10
    steps:
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # https://github.com/marketplace/actions/docker-login
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./${{ env.DART_VERSION }}/Dockerfile.archlinux
          push: true
          tags: ${{ env.DOCKER_REPO }}:archlinux-${{ env.DART_VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  # Ubuntu distros (bionic, focal, groovy, hirsute) on multiple architectures (amd64, arm64, ppc64le, s390x)
  ubuntu-v8_0:
    name: ubuntu-v8.0
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: [bionic, focal, groovy, hirsute]
    env:
      UBUNTU_VERSION: ${{ matrix.distro }}
      DART_VERSION: v8.0
    steps:
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # https://github.com/marketplace/actions/docker-login
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./${{ env.DART_VERSION }}/Dockerfile.ubuntu.${{ env.UBUNTU_VERSION }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          push: true
          tags: ${{ env.DOCKER_REPO }}:ubuntu-${{ env.UBUNTU_VERSION }}-${{ env.DART_VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  # Archlinux on amd64
  archlinux-v8_0:
    name: archlinux-v8.0
    runs-on: ubuntu-latest
    env:
      DART_VERSION: v8.0
    steps:
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # https://github.com/marketplace/actions/docker-login
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./${{ env.DART_VERSION }}/Dockerfile.archlinux
          push: true
          tags: ${{ env.DOCKER_REPO }}:archlinux-${{ env.DART_VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
