ARG BASE_IMAGE=quay.io/pypa/manylinux2014_s390x
FROM $BASE_IMAGE

RUN yum install -y glew-devel libccd-devel boost-devel bullet-devel nlopt-devel spdlog-devel tinyxml-devel python3-devel

# Missing optional dependencies:
#   ipopt

# fmt
RUN git clone https://github.com/fmtlib/fmt.git -b 9.1.0 \
    && mkdir -p fmt/build \
    && cmake fmt -B fmt/build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
    && cmake --build fmt/build --target install -j14 \
    && rm -rf fmt

# assimp
RUN git clone https://github.com/assimp/assimp.git -b 'v5.2.5' \
    && mkdir -p assimp/build \
    && cmake assimp -B assimp/build -DCMAKE_BUILD_TYPE=Release -DASSIMP_BUILD_TESTS=OFF \
    && cmake --build assimp/build --target install -j14 \
    && rm -rf assimp

# eigen
RUN git clone https://gitlab.com/libeigen/eigen.git -b '3.4.0' \
    && mkdir -p eigen/build \
    && cmake eigen -B eigen/build -DCMAKE_BUILD_TYPE=Release -DEIGEN_BUILD_TESTING=OFF -DEIGEN_BUILD_DOC=OFF \
    && cmake --build eigen/build --target install -j14 \
    && rm -rf eigen

# octomap
RUN git clone https://github.com/OctoMap/octomap.git -b 'v1.9.6' \
    && mkdir -p octomap/build \
    && cmake octomap -B octomap/build -DCMAKE_BUILD_TYPE=Release -DBUILD_OCTOVIS_SUBPROJECT=OFF -DBUILD_OCTOVIS_SUBPROJECT=OFF -DBUILD_DYNAMICETD3D_SUBPROJECT=OFF \
    && cmake --build octomap/build --target install -j14 \
    && rm -rf octomap

# fcl
RUN git clone https://github.com/flexible-collision-library/fcl.git -b '0.7.0' \
    && mkdir -p fcl/build \
    && cmake fcl -B fcl/build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
    && cmake --build fcl/build --target install -j14 \
    && rm -rf fcl

# tinyxml2
RUN git clone https://github.com/leethomason/tinyxml2.git -b '9.0.0' \
    && mkdir -p tinyxml2/build \
    && cmake tinyxml2 -B tinyxml2/build -DCMAKE_BUILD_TYPE=Release -Dtinyxml2_BUILD_TESTING=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
    && cmake --build tinyxml2/build --target install -j14 \
    && rm -rf tinyxml2

# console_bridge
RUN git clone https://github.com/ros/console_bridge.git -b 1.0.2 \
    && mkdir -p console_bridge/build \
    && cmake console_bridge -B console_bridge/build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
    && cmake --build console_bridge/build --target install -j14 \
    && rm -rf console_bridge

# urdfdom_headers
RUN git clone https://github.com/ros/urdfdom_headers.git -b 1.0.5 \
    && mkdir -p urdfdom_headers/build \
    && cmake urdfdom_headers -B urdfdom_headers/build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
    && cmake --build urdfdom_headers/build --target install -j14 \
    && rm -rf urdfdom_headers

# urdfdom
RUN git clone https://github.com/ros/urdfdom.git -b 3.0.0 \
    && mkdir -p urdfdom/build \
    && cmake urdfdom -B urdfdom/build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \
    && cmake --build urdfdom/build --target install -j14 \
    && rm -rf urdfdom

# openscenegraph
RUN git clone https://github.com/openscenegraph/OpenSceneGraph.git \
    && mkdir -p OpenSceneGraph/build \
    && cmake OpenSceneGraph -B OpenSceneGraph/build -DCMAKE_BUILD_TYPE=Release -DBUILD_OSG_APPLICATIONS=OFF \
    && cmake --build OpenSceneGraph/build --target install -j14 \
    && rm -rf OpenSceneGraph

# pybind11
RUN git clone https://github.com/pybind/pybind11.git -b 'v2.10.3' \
    && mkdir -p pybind11/build \
    && cmake pybind11 -B pybind11/build -DCMAKE_BUILD_TYPE=Release -DPYBIND11_TEST=OFF \
    && cmake --build pybind11/build --target install -j14 \
    && rm -rf pybind11
